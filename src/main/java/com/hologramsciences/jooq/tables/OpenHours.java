/*
 * This file is generated by jOOQ.
 */
package com.hologramsciences.jooq.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import com.hologramsciences.jooq.Keys;
import com.hologramsciences.jooq.Public;
import com.hologramsciences.jooq.tables.records.OpenHoursRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OpenHours extends TableImpl<OpenHoursRecord> {

    private static final long serialVersionUID = -1159272262;

    /**
     * The reference instance of <code>PUBLIC.OPEN_HOURS</code>
     */
    public static final OpenHours OPEN_HOURS = new OpenHours();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OpenHoursRecord> getRecordType() {
        return OpenHoursRecord.class;
    }

    /**
     * The column <code>PUBLIC.OPEN_HOURS.ID</code>.
     */
    public final TableField<OpenHoursRecord, Long> ID = createField(DSL.name("ID"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>PUBLIC.OPEN_HOURS.RESTAURANT_ID</code>.
     */
    public final TableField<OpenHoursRecord, Long> RESTAURANT_ID = createField(DSL.name("RESTAURANT_ID"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.OPEN_HOURS.DAY_OF_WEEK</code>.
     */
    public final TableField<OpenHoursRecord, String> DAY_OF_WEEK = createField(DSL.name("DAY_OF_WEEK"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.OPEN_HOURS.START_TIME_MINUTE_OF_DAY</code>.
     */
    public final TableField<OpenHoursRecord, Integer> START_TIME_MINUTE_OF_DAY = createField(DSL.name("START_TIME_MINUTE_OF_DAY"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.OPEN_HOURS.END_TIME_MINUTE_OF_DAY</code>.
     */
    public final TableField<OpenHoursRecord, Integer> END_TIME_MINUTE_OF_DAY = createField(DSL.name("END_TIME_MINUTE_OF_DAY"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.OPEN_HOURS</code> table reference
     */
    public OpenHours() {
        this(DSL.name("OPEN_HOURS"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.OPEN_HOURS</code> table reference
     */
    public OpenHours(String alias) {
        this(DSL.name(alias), OPEN_HOURS);
    }

    /**
     * Create an aliased <code>PUBLIC.OPEN_HOURS</code> table reference
     */
    public OpenHours(Name alias) {
        this(alias, OPEN_HOURS);
    }

    private OpenHours(Name alias, Table<OpenHoursRecord> aliased) {
        this(alias, aliased, null);
    }

    private OpenHours(Name alias, Table<OpenHoursRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> OpenHours(Table<O> child, ForeignKey<O, OpenHoursRecord> key) {
        super(child, key, OPEN_HOURS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<OpenHoursRecord, Long> getIdentity() {
        return Keys.IDENTITY_OPEN_HOURS;
    }

    @Override
    public UniqueKey<OpenHoursRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_7;
    }

    @Override
    public List<UniqueKey<OpenHoursRecord>> getKeys() {
        return Arrays.<UniqueKey<OpenHoursRecord>>asList(Keys.CONSTRAINT_7);
    }

    @Override
    public List<ForeignKey<OpenHoursRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OpenHoursRecord, ?>>asList(Keys.CONSTRAINT_7C);
    }

    public Restaurants restaurants() {
        return new Restaurants(this, Keys.CONSTRAINT_7C);
    }

    @Override
    public OpenHours as(String alias) {
        return new OpenHours(DSL.name(alias), this);
    }

    @Override
    public OpenHours as(Name alias) {
        return new OpenHours(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OpenHours rename(String name) {
        return new OpenHours(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OpenHours rename(Name name) {
        return new OpenHours(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, String, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
